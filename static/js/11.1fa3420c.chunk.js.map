{"version":3,"sources":["views/forms/Friend.js","views/forms/ChooseFriendForDebtRequest.js","views/forms/AddDebt.js"],"names":["Friend","props","handleOpenAddDebt","setState","openAddDebt","handleCloseAddDebt","getNameFromAddress","a","friendsProfile","web3","eth","Contract","profileAbi","friendAddress","methods","getName","call","friendName","state","bind","this","block","color","className","onClick","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","AddDebt","handleClose","Component","ChooseFriendForDebtRequest","onCheckMyFriends","profile","getFriends","friendsList","length","index","allFriends","getFriendsByIndex","friend","ethereum","window","enable","console","log","friends","Object","entries","value","push","playerOne","setStateAndAmountOfExchanges","isFriendsListEmpty","xs","md","vertical","onSubmitAddDebtRequest","event","preventDefault","getAccounts","accounts","addDebtRequest","providedAmount","send","from","gas","addDebtRequestNotRestricted","playerTwo","contractsList","onChangeFormInput","target","name","action","method","onSubmit","placeholder","autoComplete","onChange","type","size"],"mappings":"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","file":"static/js/11.1fa3420c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport web3 from \"../../web3.js\";\nimport profileAbi from \"../../profile\";\n//CORE-UI\nimport { CButton } from \"@coreui/react\";\n//MATERIAL-UI\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport AddDebt from \"./AddDebt\";\n\nexport class Friend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      friendAddress: this.props.friendAddress,\n      friendName: \"\",\n      openAddDebt: false,\n    };\n    this.handleOpenAddDebt = this.handleOpenAddDebt.bind(this);\n    this.handleCloseAddDebt = this.handleCloseAddDebt.bind(this);\n    this.getNameFromAddress = this.getNameFromAddress.bind(this);\n  }\n\n  componentDidMount() {\n    this.getNameFromAddress();\n  }\n  // Add debt state related\n  handleOpenAddDebt = () => {\n    this.setState({ openAddDebt: true });\n  };\n  handleCloseAddDebt = () => {\n    this.setState({ openAddDebt: false });\n  };\n\n  getNameFromAddress = async () => {\n    let friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.props.friendAddress\n    );\n    this.setState({\n      friendName: await friendsProfile.methods.getName().call(),\n    });\n  };\n  render() {\n    // console.log(this);\n    return (\n      <div>\n        <CButton\n          block\n          color=\"light\"\n          className=\"friend_button\"\n          onClick={this.handleOpenAddDebt}\n        >\n          {this.state.friendName}\n        </CButton>\n        <Dialog\n          open={this.state.openAddDebt}\n          onClose={this.handleCloseAddDebt}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\" className=\"align_center\">\n            Add Debt\n          </DialogTitle>\n          <DialogContent>\n            <AddDebt {...this.props} handleClose={this.handleCloseAddDebt} />\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default Friend;\n","import React, { Component } from \"react\";\n\nimport Friend from \"./Friend\";\n\nimport {\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n} from \"@coreui/react\";\n\nexport class ChooseFriendForDebtRequest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      friendsList: [],\n      friend: [],\n      allFriends: [],\n    };\n\n    this.onCheckMyFriends = this.onCheckMyFriends.bind(this);\n    // this.getFriend = this.getFriend.bind(this);\n  }\n\n  async componentDidMount() {\n    // console.log(this.state.friendsList);\n    let ethereum = window.ethereum;\n    if (typeof ethereum !== \"undefined\") {\n      await ethereum.enable();\n    }\n    this.onCheckMyFriends();\n  }\n\n  onCheckMyFriends = async () => {\n    // console.log(\"your friends are:\");\n    // console.log(await profile.methods.getFriends().call());\n    this.setState({\n      friendsList: await this.props.profile.methods.getFriends().call(),\n    });\n    const length = this.state.friendsList.length;\n    if (length > 0) {\n      for (var index = 0; index < length; index++) {\n        this.setState({\n          allFriends: [\n            ...this.state.allFriends,\n            await this.props.profile.methods.getFriendsByIndex(index).call(),\n          ],\n        });\n      }\n    }\n  };\n\n  render() {\n    console.log(this);\n    const friends = [];\n    const amountOfFriends = this.state.friendsList.length;\n    // console.log(this.state.allFriends);\n\n    for (const [index, value] of Object.entries(this.state.allFriends)) {\n      // console.log(value);\n      friends.push(\n        <Friend\n          key={index}\n          {...value}\n          playerOne={this.props.playerOne}\n          friendAddress={value.friendAddress}\n          profile={this.props.profile}\n          setStateAndAmountOfExchanges={this.props.setStateAndAmountOfExchanges}\n        />\n      );\n    }\n    const isFriendsListEmpty = this.state.friendsList.length;\n\n    return (\n      <div>\n        <CCol xs=\"12\" md=\"4\">\n          <CCard>\n            <CCardHeader className=\"align_center\">Choose a friend</CCardHeader>\n            <CCardBody className=\"wrapper\">\n              {isFriendsListEmpty === 0 ? (\n                <h1>no friends yet</h1>\n              ) : (\n                <CButtonGroup vertical>{friends}</CButtonGroup>\n              )}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </div>\n    );\n  }\n}\n\nexport default ChooseFriendForDebtRequest;\n","import React, { Component } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CForm,\n  CFormGroup,\n  CInput,\n  CInputGroup,\n  CInputGroupText,\n  CInputGroupAppend,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\n// SOL RELATED\nimport web3 from \"../../web3.js\";\nimport profileAbi from \"../../profile\";\n\nexport class AddDebt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // friendsAddress: this.props.friendAddress,\n      // friendRequestIndex: \"\",\n      providedAmount: \"\",\n      playerTwo: this.props.friendAddress,\n      // friendsList: [],\n      // exchanges: {},\n      contractsList: [],\n    };\n\n    this.onChangeFormInput = this.onChangeFormInput.bind(this);\n    this.onSubmitAddDebtRequest = this.onSubmitAddDebtRequest.bind(this);\n  }\n\n  // *****************************************************\n  //               BINARY_CONTRACT PART\n  // *****************************************************\n\n  // Add a debt request for both our exchanges and target exchanges\n  onSubmitAddDebtRequest = async (event) => {\n    event.preventDefault();\n\n    // Getting accounts list\n    const accounts = await web3.eth.getAccounts();\n\n    // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friendsProfile address\n    const friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.props.friendAddress\n    );\n\n    await this.props.profile.methods\n      .addDebtRequest(\n        this.props.friendAddress,\n        this.props.playerOne,\n        this.state.providedAmount,\n        this.props.friendAddress\n      )\n      .send({\n        from: accounts[0],\n        gas: \"1000000\",\n      });\n\n    await friendsProfile.methods\n      .addDebtRequestNotRestricted(\n        this.props.playerOne,\n        this.props.playerOne,\n        this.state.providedAmount,\n        this.props.friendAddress\n      )\n      .send({\n        from: accounts[0],\n        gas: \"1000000\",\n      });\n    await this.props.setStateAndAmountOfExchanges();\n    this.props.handleClose();\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////\n  // *****************************************************\n  //                  FORM CHANGE HANDLERS\n  // *****************************************************\n\n  onChangeFormInput(event) {\n    event.preventDefault();\n    const {\n      target: { name, value },\n    } = event;\n    this.setState({ [name]: value });\n  }\n  render() {\n    console.log(this);\n    return (\n      <div>\n        <CCard>\n          <CCardHeader className=\"align_center\">Send Debt Request</CCardHeader>\n          <CCardBody>\n            <CForm\n              action=\"\"\n              method=\"post\"\n              onSubmit={this.onSubmitAddDebtRequest}\n            >\n              {/* <CFormGroup>\n                <CInputGroup>\n                  <CInput\n                    id=\"toDebtRequest\"\n                    name=\"friendsAddress\"\n                    placeholder=\"To\"\n                    autoComplete=\"To\"\n                    value={this.state.friendsAddress}\n                    onChange={this.onChangeFormInput}\n                  />\n                  <CInputGroupAppend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-user\" />\n                    </CInputGroupText>\n                  </CInputGroupAppend>\n                </CInputGroup>\n              </CFormGroup> */}\n              <CFormGroup>\n                <CInputGroup>\n                  <CInput\n                    id=\"amountDebt\"\n                    name=\"providedAmount\"\n                    placeholder=\"Amount\"\n                    autoComplete=\"amount\"\n                    onChange={this.onChangeFormInput}\n                  />\n                  <CInputGroupAppend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-dollar\" />\n                    </CInputGroupText>\n                  </CInputGroupAppend>\n                </CInputGroup>\n              </CFormGroup>\n              <CFormGroup className=\"form-actions align_center\">\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"secondary\"\n                  className=\"confirm_button\"\n                >\n                  Confirm\n                </CButton>\n              </CFormGroup>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </div>\n    );\n  }\n}\n\nexport default AddDebt;\n"],"sourceRoot":""}