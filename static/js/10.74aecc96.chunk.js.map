{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/pages/login/Login.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Login","props","onFormSubmit","a","isLoggedInCheck","state","phoneNumber","username","onChangeFormInput","bind","event","preventDefault","target","name","setState","className","md","id","type","placeholder","autoComplete","onChange","required","xs","color","onClick","to","pathname","registerProps","writeUserData","compiledBinaryContract","NotRegisteredMessage","Component"],"mappings":"gKAAAA,EAAOC,QAAU,EAAQ,M,iCCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,oMCkBaC,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,aAXmB,sBAWJ,sBAAAC,EAAA,sEACP,EAAKF,MAAMG,gBAAgB,EAAKC,MAAMC,aAD/B,2CARb,EAAKD,MAAQ,CACXE,SAAU,GACVD,YAAa,IAEf,EAAKE,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKP,aAAe,EAAKA,aAAaO,KAAlB,gBARH,EADrB,8DAgBoBC,GAChBA,EAAMC,iBADiB,MAInBD,EADFE,OAAUC,EAHW,EAGXA,KAAM3B,EAHK,EAGLA,MAElBQ,KAAKoB,SAAL,eAAiBD,EAAO3B,MArB5B,+BAyBI,OACE,qBAAK6B,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,uCACA,mBAAGA,UAAU,aAAb,qCAiBA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAK,kBAGhB,cAAC,IAAD,CACEI,GAAG,cACHJ,KAAK,cACLK,KAAK,OACLC,YAAY,eACZC,aAAa,MACbC,SAAU3B,KAAKc,kBACfc,UAAQ,OAGZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,MAAM,UACNT,UAAU,OAEVU,QAAS/B,KAAKQ,aAJhB,qBASF,cAAC,IAAD,CAAMqB,GAAG,IAAIR,UAAU,aAAvB,SACE,cAAC,IAAD,CACES,MAAM,OACNT,UAAU,OACVW,GAAI,CACFC,SAAU,aACVC,cAAe,CACbC,cAAenC,KAAKO,MAAM4B,cAC1BC,uBAAwBpC,KAAKO,MAC1B6B,yBART,kCAgBJ,cAAC,IAAD,UACE,6BAAKpC,KAAKO,MAAM8B,8CAlGxC,GAA2BC,aA0IZhC","file":"static/js/10.74aecc96.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      phoneNumber: \"\",\n    };\n    this.onChangeFormInput = this.onChangeFormInput.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onFormSubmit = async () => {\n    await this.props.isLoggedInCheck(this.state.phoneNumber);\n  };\n\n  onChangeFormInput(event) {\n    event.preventDefault();\n    const {\n      target: { name, value },\n    } = event;\n    this.setState({ [name]: value });\n  }\n  render() {\n    // console.log(this);\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"8\">\n              <CCardGroup>\n                {/* <CForm action=\"\" method=\"post\" onSubmit={this.onFormSubmit}> */}\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      {/* <CInputGroup className=\"mb-3\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput\n                          id=\"userName\"\n                          name=\"username\"\n                          type=\"text\"\n                          placeholder=\"Username\"\n                          autoComplete=\"false\"\n                          onChange={this.onChangeFormInput}\n                          required\n                        />\n                      </CInputGroup> */}\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-phone\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput\n                          id=\"phoneNumber\"\n                          name=\"phoneNumber\"\n                          type=\"text\"\n                          placeholder=\"Phone number\"\n                          autoComplete=\"off\"\n                          onChange={this.onChangeFormInput}\n                          required\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs=\"6\">\n                          <CButton\n                            color=\"primary\"\n                            className=\"px-4\"\n                            // type=\"submit\"\n                            onClick={this.onFormSubmit}\n                          >\n                            Login\n                          </CButton>\n                        </CCol>\n                        <CCol xs=\"6\" className=\"text-right\">\n                          <CButton\n                            color=\"link\"\n                            className=\"px-0\"\n                            to={{\n                              pathname: \"./register\",\n                              registerProps: {\n                                writeUserData: this.props.writeUserData,\n                                compiledBinaryContract: this.props\n                                  .compiledBinaryContract,\n                              },\n                            }}\n                          >\n                            Not registered?\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                      <CRow>\n                        <h6>{this.props.NotRegisteredMessage}</h6>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n                {/* <CCard\n                  className=\"text-white bg-primary py-5 d-md-down-none\"\n                  style={{ width: \"44%\" }}\n                >\n                  <CCardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>\n                        Lorem ipsum dolor sit amet, consectetur adipisicing\n                        elit, sed do eiusmod tempor incididunt ut labore et\n                        dolore magna aliqua.\n                      </p>\n                      <Link to=\"/register\">\n                        <CButton\n                          color=\"primary\"\n                          className=\"mt-3\"\n                          active\n                          tabIndex={-1}\n                        >\n                          Register Now!\n                        </CButton>\n                      </Link>\n                    </div>\n                  </CCardBody>\n                </CCard> */}\n                {/* </CForm> */}\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"sourceRoot":""}